#
# name that will be displayed in the Filter header. This property is mandatory
#
FILTER_DISPLAYNAME=Generate Json Web Signature
#
# Description that will be displayed in the filter header. This property is mandatory
#
FILTER_DESCRIPTION=Generate a signed JWT or JWS object
#
# Filter Palette Category. This property is optional and defaults to 'Utility'
#
FILTER_CATEGORY=Integrity
#
# Filter Palette Icon This property is optional and defaults to 'filter_small'
# XXX need to add list here
#
FILTER_ICON=xmlsig

SIGNATURE_ALGORITHM_TAB=Signature Key and Algorithm
SIGNATURE_ALGORITHM_GROUP=Algorithm selection
SIGNATURE_ALGORITHMLEVEL=Discover algorithm from key
SIGNATURE_ALGORITHMLEVEL_LABEL=Discover algorithm level (256, 384 or 512)
SIGNATURE_ALGORITHMFIXED=Manually specify algorithm
SIGNATURE_ALGORITHMFIXED_LABEL=Algorithm

SIGNATURE_KEY_GROUP=Key Selection
SIGNATURE_KEYINSTORE=Use Key from internal key store
SIGNATURE_CERTIFICATE_LABEL=Signer Certificate
SIGNATURE_KEYID_LABEL=Signature KeyId Generation
SIGNATURE_KEYID_ALIAS=Use Certificate Alias
SIGNATURE_KEYID_X5T=Compute Certificate x5t
SIGNATURE_KEYID_X5T256=Compute Certificate x5t#256

SIGNATURE_KEYSELECTOR=Use Selector expression
SIGNATURE_KEYSELECTOR_LABEL=Key
SIGNATURE_KEYSELECTORID_LABEL=Key ID

SIGNATURE_JWSHEADER_TAB=Signature JOSE Header
CLAIM_TYP_LABEL=Generate 'typ' claim
CLAIM_CTY_LABEL=Generate 'cty' claim (forced for nested JWT/JWS)
CLAIM_KID_LABEL=Include 'kid' claim if a key ID is available
CLAIM_JKU_LABEL=JWK Set URL

SIGNATURE_JWSCERTIFICATE_GROUP=Certificate specific header claims
CLAIM_JWK_LABEL=Embed all key related claims in the 'jwk' claim (except for 'jku')
CLAIM_X5T_LABEL=Generate 'x5t' thumbprint
CLAIM_X5T256_LABEL=Generate 'x5t#256' thumbprint
CLAIM_X5C_LABEL=Include 'x5c' certificate chain
CLAIM_X5U_LABEL=Include 'x5u' certificate URL

SIGNATURE_JWSPAYLOAD_TAB=Signature Payload
SIGNATURE_JWS=Generate JWS from existing body
CLAIM_DEF_LABEL=Deflate body before signing (non standard)
SIGNATURE_JWT=Generate JWT
SIGNATURE_JWTTEMPLATE_LABEL=JSON Template
SIGNATURE_JWTCLAIMS_LABEL=JWT Claims
CLAIM_ISS_LABEL=Issuer 'iss'
CLAIM_SUB_LABEL=Subject 'sub'
CLAIM_JTI_LABEL=ID 'jti'
CLAIM_AUD_LABEL=Audience 'aud'
JWSPAYLOAD_LIFETIME_GROUP=JWS lifetime offsets (in seconds)
CLAIM_NBF_LABEL=Delay before usage 'nbf' (relative to system time)
CLAIM_EXP_LABEL=Delay before expiration 'exp' (relative to 'nbf')
CLAIM_IAT_LABEL=Include system time 'iat'
SIGNATURE_OPENID_GROUP=OpenID Special claims
CLAIM_OIDATH_LABEL=Access Token (generate 'at_hash' half hash)
CLAIM_OIDCH_LABEL=Authorization Code (generate 'c_hash' half hash)

SIGNATURE_ADVANCED_TAB=Advanced (JWS/JWT)
CLAIM_CRIT_LABEL=Critical extensions 'crit'
CLAIMS_AUD_LABEL=Alternate JWT Audiences
SIGNATURE_PRIVATEKEY_LABEL=External Certificate Private Key
SIGNATURE_KEYCHAIN_LABEL=External Certificate Chain
JWSEXTENSIONPOLICY_LABEL=Extend JWS Header using a Policy
JWSEXTENSIONPOLICY_TITLE=Select a policy to extend the JWS Header
JWTEXTENSIONPOLICY_LABEL=Extend JWT Payload using a Policy
JWTEXTENSIONPOLICY_TITLE=Select a policy to extend the JWT Payload

SIGNATURE_OUTPUT_TAB=Signature Output
SIGNATURE_OUTBODY=Set the generated signature as body
SIGNATURE_OUTATTRIBUTE=Set an attribute with the generated signature
OUTPUT_ATTRIBUTENAME_LABEL=Attribute name
SIGNATURE_OUTHEADER=Add the generated signature to an HTTP header
OUTPUT_HEADERNAME_LABEL=Header name
OUTPUT_HEADER_OVERWRITE=Overwrite existing value
OUTPUT_HEADERS_BODY=Use body headers
OUTPUT_HEADERS_MESSAGE=Use message headers

QUICKFILTER_REQUIRED=http.headers,content.body
